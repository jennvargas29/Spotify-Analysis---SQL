# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );



#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


SELECT * FROM BIT_DB.Spotifydata; 


-- Identifying Top Artists:
-- Which artists have the highest average popularity scores for their tracks?

SELECT artist_name
,AVG(popularity) AS avg_popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_popularity DESC;

-- Which artists have the most tracks in the dataset?
SELECT artist_name
,COUNT(*) AS count_track
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY count_track DESC; 


-- I determined the avg popularity, danceability, and energy by artist and track. 
SELECT artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

-- I determined who the Top 10 artists are by popularity
SELECT track_name
,artist_name
,popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;


